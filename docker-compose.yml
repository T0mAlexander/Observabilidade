version: '3.9'
name: observabilidade

services:
  app:
    container_name: app
    build: .
    ports:
      - 8080:8080
    environment:
      OTEL_SERVICE_NAME: app
      OTEL_RESOURCE_ATTRIBUTES: cliente=app-1,env=dev
      OTEL_TRACES_SAMPLER: always_on
      # OTEL_TRACES_EXPORTER: none
      OTEL_METRICS_EXPORTER: none
      OTEL_LOGS_EXPORTER: none
      # OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: http://loki:3100/loki/api/v1/push
      # OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: http://prometheus:9090/api/v1/write
      # OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://tempo:4317
      OTEL_JAVAAGET_LOGGING: DEBUG
      # OTEL_CONFIG_FILE: /app/sdk.yml
    # volumes:
    #   - ./docker/otel/sdk.yml:/app/sdk.yml
    depends_on:
      - prometheus
      - loki
      - tempo

  prometheus:
    container_name: prometheus
    user: root
    image: prom/prometheus:v2.49.1
    ports:
      - 9090:9090
    volumes:
      - ./docker/prometheus/config.yml:/prometheus/config.yml
      - ./docker/alertmanager/alerts/certs.yml:/prometheus/alerts/certs.yml
      # - ./docker/prometheus/data/:/prometheus/data/
    command:
      - --config.file=/prometheus/config.yml
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receive
      - --storage.tsdb.path=/prometheus
    depends_on:
      - loki

  alertmanager:
    container_name: alert-manager
    image: prom/alertmanager:v0.27.0
    ports:
      - 9093:9093
    volumes:
      - ./docker/alertmanager/config.yml:/alertmanager/alertmanager.yml
    command:
      - --config.file=/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --log.level=debug
    depends_on:
      - prometheus

  blackbox-exporter:
    container_name: blackbox-exporter
    image: prom/blackbox-exporter:v0.24.0
    ports: 
      - 9115:9115
    volumes:
      - ./docker/prometheus/blackbox/config.yml:/blackbox/config.yml
    command: --config.file=/blackbox/config.yml
    depends_on:
      - prometheus

  loki:
    container_name: loki
    image: grafana/loki:2.9.5
    user: root
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./docker/loki/config.yml:/etc/loki/config.yml
      # - ./docker/loki/data:/loki/wal/
    ports:
      - 3100:3100

  tempo:
    container_name: tempo
    image: grafana/tempo:2.4.0
    user: root
    command:
      - --config.file=/etc/tempo/config.yml
      - --target=all
      - --storage.trace.backend=local
      - --storage.trace.local.path=/etc/tempo/cluster
      - --auth.enabled=false
    volumes:
      - ./docker/tempo/config.yml:/etc/tempo/config.yml
      # - ./docker/tempo/data:/var/tempo/
    ports:
      - 3200:3200
    depends_on:
      - loki

  grafana:
    container_name: grafana
    image: grafana/grafana:10.3.3
    ports:
      - 3000:3000
    volumes:
      - ./docker/grafana/datasources.yml:/usr/share/grafana/conf/provisioning/datasources/datasources.yml
      - ./docker/grafana/dashboards:/usr/share/grafana/dashboards
    depends_on:
      - loki
      - prometheus
      - tempo

  # otel-collector:
  #   container_name: otel-collector
  #   image: otel/opentelemetry-collector-contrib:0.95.0
  #   volumes:
  #     - ./docker/otel/config.yml:/otel/config.yml
  #   command: --config=/otel/config.yml
  #   ports:
  #     - 1888:1888 # pprof extension
  #     - 8888:8888 # Prometheus metrics exposed by the collector
  #     - 8889:8889 # Prometheus exporter metrics
  #     - 13133:13133 # health_check extension
  #     - 4317:4317 # OTLP gRPC receiver
  #     - 4318:4318 # OTLP http receiver
  #     - 55679:55679 # zpages extension
  #   depends_on:
  #     - tempo
  #     - loki
  #     - prometheus
