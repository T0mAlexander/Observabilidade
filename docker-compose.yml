version: '3.9'
name: observabilidade

services:
  app:
    container_name: app
    build: .
    ports:
      - 8080:8080
      - 9464:9464
    volumes:
      - ./ocelot.yml:/app/config/ocelot.yml
      - ./app.log:/app-java.log
    depends_on:
      - prometheus
      - loki
      - tempo
      - postgresql
      - postgres-exporter

  postgresql:
    container_name: postgresql
    image: bitnami/postgresql:16
    ports:
      - 5432:5432
    environment:
      - POSTGRESQL_USERNAME=java
      - POSTGRESQL_PASSWORD=123
      - POSTGRESQL_DATABASE=app

  postgres-exporter:
    container_name: postgres-exporter
    image: bitnami/postgres-exporter:0.15.0
    ports:
      - 9187:9187
    environment:
      - DATA_SOURCE_NAME=postgresql://java:123@postgresql:5432/app?sslmode=disable
    depends_on:
      - postgresql

  prometheus:
    container_name: prometheus
    user: root
    image: prom/prometheus:v2.50.1
    ports:
      - 9090:9090
    volumes:
      - ./docker/prometheus/config.yml:/prometheus/config.yml
      - ./docker/alertmanager/alerts/certs.yml:/prometheus/alerts/certs.yml
      # - ./docker/prometheus/data/:/prometheus/data/
    command:
      - --config.file=/prometheus/config.yml
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receive
      - --storage.tsdb.path=/prometheus
    depends_on:
      - loki

  alertmanager:
    container_name: alert-manager
    image: prom/alertmanager:v0.27.0
    ports:
      - 9093:9093
    volumes:
      - ./docker/alertmanager/config.yml:/alertmanager/alertmanager.yml
    command:
      - --config.file=/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --log.level=debug
    depends_on:
      - prometheus

  blackbox-exporter:
    container_name: blackbox-exporter
    image: prom/blackbox-exporter:v0.24.0
    ports: 
      - 9115:9115
    volumes:
      - ./docker/prometheus/blackbox/config.yml:/blackbox/config.yml
    command: --config.file=/blackbox/config.yml
    depends_on:
      - prometheus

  loki:
    container_name: loki
    image: grafana/loki:2.9.5
    user: root
    command: 
      - -config.file=/etc/loki/config.yml
      - -print-config-stderr=true
    volumes:
      - ./docker/loki/config.yml:/etc/loki/config.yml
      - ./loki.log:/etc/loki/container.log
      # - ./docker/loki/data:/loki/wal/
    ports:
      - 3100:3100
    depends_on:
      - promtail
    logging:
      driver: journald

  promtail:
    container_name: promtail
    image: grafana/promtail:2.9.5 
    volumes:
      - ./app.log/:/app/app.log
      - ./docker/loki/promtail/config.yml:/promtail/config.yml
    command:
      - -config.file=/promtail/config.yml
      - -print-config-stderr=true
      - -config.expand-env=true
    ports:
      - 3400:3400

  tempo:
    container_name: tempo
    image: grafana/tempo:2.4.0
    user: root
    command:
      - --config.file=/etc/tempo/config.yml
      - --target=all
      - --storage.trace.backend=local
      - --storage.trace.local.path=/etc/tempo/cluster
      - --auth.enabled=false
    volumes:
      - ./docker/tempo/config.yml:/etc/tempo/config.yml
      # - ./docker/tempo/data:/var/tempo/
    ports:
      - 3200:3200
    depends_on:
      - loki

  grafana:
    container_name: grafana
    image: grafana/grafana:10.3.3
    ports:
      - 3000:3000
    volumes:
      - ./docker/grafana/datasources.yml:/usr/share/grafana/conf/provisioning/datasources/datasources.yml
      - ./docker/grafana/dashboards:/usr/share/grafana/dashboards
    depends_on:
      - loki
      - prometheus
      - tempo

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:0.95.0
    volumes:
      - ./docker/otel/config.yml:/otel/config.yml
    command: --config=/otel/config.yml
    ports:
      - 4317:4317
    depends_on:
      - tempo
      - loki
      - prometheus
