version: '3.9'
name: observabilidade

x-logging: &loki
  driver: loki
  options:
    loki-url: http://localhost:3100/loki/api/v1/push
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<date>\d{4}-\d{2}-\d{2}) (?P<time>\d{2}:\d{2}:\d{2}.\d{3}) (?P<message>(?s:.*))$$'

services:
  app:
    container_name: app
    build: .
    ports:
      - 8080:8080
      - 9464:9464
    environment:
      OTEL_SERVICE_NAME: app
      MANAGEMENT_METRICS_TAGS_APPLICATION: app
      OTEL_RESOURCE_ATTRIBUTES: compose_service=app
      OTEL_METRICS_EXPORTER: none
      OTEL_LOGS_EXPORTER: none
      OTEL_EXPORTER_OTLP_ENDPOINT: http://tempo:4317
      OTEL_TRACES_SAMPLER: always_on
      # OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: http://loki:3100/loki/api/v1/push
      # OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: http://prometheus:9090/api/v1/otlp/v1/metrics
      # OTEL_JAVAAGENT_LOGGING: application
      # OTEL_JAVAAGENT_DEBUG: true
    depends_on:
      - prometheus
      - loki
      - tempo
    labels:
      logging: promtail

  prometheus:
    container_name: prometheus
    user: root
    image: prom/prometheus:v2.50.1
    ports:
      - 9090:9090
    volumes:
      - ./docker/prometheus/config.yml:/prometheus/config.yml
      - ./docker/alertmanager/alerts/certs.yml:/prometheus/alerts/certs.yml
      # - ./docker/prometheus/data/:/prometheus/data/
    command:
      - --config.file=/prometheus/config.yml
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
      - --storage.tsdb.path=/prometheus
    depends_on:
      - loki

  alertmanager:
    container_name: alert-manager
    image: prom/alertmanager:v0.27.0
    ports:
      - 9093:9093
    volumes:
      - ./docker/alertmanager/config.yml:/alertmanager/alertmanager.yml
    command:
      - --config.file=/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --log.level=debug
    depends_on:
      - prometheus

  blackbox-exporter:
    container_name: blackbox-exporter
    image: prom/blackbox-exporter:v0.24.0
    ports: 
      - 9115:9115
    volumes:
      - ./docker/prometheus/blackbox/config.yml:/blackbox/config.yml
    command: --config.file=/blackbox/config.yml
    depends_on:
      - prometheus

  loki:
    container_name: loki
    image: grafana/loki:2.9.5
    user: root
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./docker/loki/config.yml:/etc/loki/config.yml
      # - ./docker/loki/data:/loki/wal/
    ports:
      - 3100:3100
    depends_on:
      - promtail

  promtail:
    container_name: promtail
    image: grafana/promtail:2.9.4
    command:
      - -config.file=/promtail/config.yml
      - -print-config-stderr=true
      - -config.expand-env=true
    volumes:
      # - ./docker/promtail/positions.yml:/promtail/positions.yml
      - ./docker/promtail/config.yml:/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 3400:3400

  tempo:
    container_name: tempo
    image: grafana/tempo:2.4.0
    user: root
    command:
      # - --config.file=/etc/tempo/config.yml
      - --target=all
      - --storage.trace.backend=local
      - --storage.trace.local.path=/etc/tempo/cluster
      - --auth.enabled=false
    volumes:
      - ./docker/tempo/config.yml:/etc/tempo/config.yml
      # - ./docker/tempo/data:/var/tempo/
    ports:
      - 4317:4317
    depends_on:
      - loki

  grafana:
    container_name: grafana
    image: grafana/grafana:10.3.3
    ports:
      - 3000:3000
    volumes:
      - ./docker/grafana/datasources.yml:/usr/share/grafana/conf/provisioning/datasources/datasources.yml
      - ./docker/grafana/dashboards:/usr/share/grafana/dashboards
    depends_on:
      - loki
      - prometheus
      - tempo
