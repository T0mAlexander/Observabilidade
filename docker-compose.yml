version: '3.8'
name: observabilidade

services:
  wildfly:
    container_name: wildfly
    build: .
    ports:
      - 8080:8080
      - 9990:9990 # Porta do painel de admin do Wildfly
      - 9991:9991 # Porta do Prometheus JMX Exporter
    environment:
      TZ: America/Sao_Paulo
    volumes:
      - ./docker/wildfly/standalone.xml:/opt/jboss/wildfly/standalone/configuration/standalone.xml
      - ./docker/wildfly/standalone.conf:/opt/jboss/wildfly/bin/standalone.conf
      - ./docker/prometheus/jmx-exporter.yml:/jmx-exporter.yml

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:v1.7.0
    command:
      - --path.rootfs=/host
    volumes:
      - /:/host:ro,rslave
    restart: unless-stopped
    cap_add:
      - SYS_TIME
    expose:
      - 9100
    depends_on:
      - prometheus
      - grafana

  # jaeger:
  #   container_name: jaeger
  #   image: jaegertracing/all-in-one:1.55
  #   ports:
  #     - 4000:16686
  #     - 4317:4317
  #   environment:
  #     OTLP_COLLECTOR_ENABLED: true

  tempo:
    container_name: tempo
    image: grafana/tempo:2.4.0
    user: root
    command:
      - --config.file=/etc/tempo/config.yml
      - --target=all
      - --storage.trace.backend=local
      - --storage.trace.local.path=/etc/tempo/cluster
      - --auth.enabled=false
    volumes:
      - ./docker/tempo/config.yml:/etc/tempo/config.yml
      # - ./docker/tempo/data:/var/tempo/
    ports:
      - 4317:4317
    depends_on:
      - grafana

  prometheus:
    container_name: prometheus
    user: root
    image: prom/prometheus:v2.50.1
    ports:
      - 9090:9090
    volumes:
      - ./docker/prometheus/config.yml:/prometheus/config.yml
      - ./docker/alertmanager/alerts/certs.yml:/prometheus/alerts/certs.yml
      # - ./docker/prometheus/data/:/prometheus/data/
    command:
      - --config.file=/prometheus/config.yml
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    # depends_on:
    #   - loki

  alertmanager:
    container_name: alert-manager
    image: prom/alertmanager:v0.27.0
    ports:
      - 9093:9093
    volumes:
      - ./docker/alertmanager/config.yml:/alertmanager/alertmanager.yml
    command:
      - --config.file=/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --log.level=debug
    depends_on:
      - prometheus

  blackbox-exporter:
    container_name: blackbox-exporter
    image: prom/blackbox-exporter:v0.24.0
    ports: 
      - 9115:9115
    volumes:
      - ./docker/prometheus/blackbox/config.yml:/blackbox/config.yml
    command: --config.file=/blackbox/config.yml
    depends_on:
      - prometheus

  loki:
    container_name: loki
    image: grafana/loki:2.9.5
    user: root
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./docker/loki/config.yml:/etc/loki/config.yml
      # - ./docker/loki/data:/loki/wal/
    ports:
      - 3100:3100
    depends_on:
      - promtail

  promtail:
    container_name: promtail
    image: grafana/promtail:2.9.4
    command:
      - -config.file=/promtail/config.yml
      - -print-config-stderr=true
      - -config.expand-env=true
    volumes:
      # - ./docker/promtail/positions.yml:/promtail/positions.yml
      - ./docker/promtail/config.yml:/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 3400:3400

  grafana:
    container_name: grafana
    image: grafana/grafana:10.3.5
    ports:
      - 3000:3000
    volumes:
      - ./docker/grafana/datasources.yml:/usr/share/grafana/conf/provisioning/datasources/datasources.yml
      - ./docker/grafana/dashboards:/usr/share/grafana/dashboards
    depends_on:
      # - loki
      - prometheus
