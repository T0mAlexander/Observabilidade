version: '3.8'
name: observabilidade

services:
  app:
    container_name: app
    build: .
    
    ports:
      - 3333:3333
    labels:
      log: true
      log_job: containerlogs
    depends_on:
      - database

  nginx:
    container_name: nginx
    image: nginx:1.25.3-alpine
    ports:
      - 8080:80

  database:
    container_name: postgresql
    image: bitnami/postgresql:16
    ports:
      - 5432:5432
    environment:
      - POSTGRESQL_USERNAME=golang
      - POSTGRESQL_PASSWORD=golang
      - POSTGRESQL_DATABASE=postgresql
    volumes:
      - ./products.sql:/docker-entrypoint-initdb.d/products.sql

  db_exporter:
    container_name: pgsql-exporter
    image: bitnami/postgres-exporter:0.15.0
    ports:
      - 9187:9187
    environment:
      - DATA_SOURCE_NAME=postgresql://golang:golang@database:5432/golang?ssl=disable
    depends_on:
      - database

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./alert-rules.yml:/etc/prometheus/alert-rules.yml
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    container_name: grafana
    image: grafana/grafana:10.2.3
    ports:
      - 3000:3000
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml

  loki:
    container_name: grafana-loki
    image: grafana/loki:2.9.3
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yml

  promtail:
    container_name: promtail
    image: grafana/promtail:2.9.3
    volumes:
      - ./config/promtail.yml:/etc/promtail/docker-config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: 
      - -config.file=/etc/promtail/docker-config.yml
      - -print-config-stderr=true
    depends_on:
      - loki